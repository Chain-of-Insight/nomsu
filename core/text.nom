#
    This file contains some definitions of text escape sequences, including ANSI console
    color codes.

use "core/metaprogramming.nom"

# Text functions
action [%texts joined with %glue]
    lua> ".."
        local text_bits = {}
        for i,bit in ipairs(\%texts) do text_bits[i] = stringify(bit) end
        return table.concat(text_bits, \%glue)
parse [joined %texts, %texts joined] as: %texts joined with ""

compile [capitalized %text, %text capitalized] to
    Lua value "((\(%text as lua expr)):gsub('%l', string.upper, 1))"

compile [%text with %sub instead of %patt, %text s/%patt/%sub] to
    Lua value "((\(%text as lua expr)):gsub(\(%patt as lua expr), \(%sub as lua expr)))"

action [lines in %text, lines of %text]
    lua> ".."
        local result = {}
        for line in (\%text):gmatch('[^\n]+') do
            result[#result+1] = line
        end
        return result

# Text literals
lua> ".."
    do
        local escapes = {
            nl="\\\\n", newline="\\\\n", tab="\\\\t", bell="\\\\a", cr="\\\\r", ["carriage return"]="\\\\r",
            backspace="\\\\b", ["form feed"]="\\\\f", formfeed="\\\\f", ["vertical tab"]="\\\\v",
        };
        for name, e in pairs(escapes) do
            local lua = "'"..e.."'"
            _ENV["A"..name:as_lua_id()] = compile_time(function(tree) return Lua.Value(tree.source, lua) end)
        end
        local colors = {
            ["reset color"]="\\\\27[0m", bright="\\\\27[1m", dim="\\\\27[2m", underscore="\\\\27[4m",
            blink="\\\\27[5m", inverse="\\\\27[7m", hidden="\\\\27[8m",

            black="\\\\27[30m", red="\\\\27[31m", green="\\\\27[32m", yellow="\\\\27[33m", blue="\\\\27[34m",
            magenta="\\\\27[35m", cyan="\\\\27[36m", white="\\\\27[37m",

            ["on black"]="\\\\27[40m", ["on red"]="\\\\27[41m", ["on green"]="\\\\27[42m", ["on yellow"]="\\\\27[43m",
            ["on blue"]="\\\\27[44m", ["on magenta"]="\\\\27[45m", ["on cyan"]="\\\\27[46m", ["on white"]="\\\\27[47m",
        };
        for name, c in pairs(colors) do
            local color = "'"..c.."'";
            local reset = "'"..colors["reset color"].."'";
            _ENV["A"..name:as_lua_id()] = compile_time(function(tree) return Lua.Value(tree.source, color) end)
            _ENV["A"..name:as_lua_id().."_1"] = compile_time(function(tree, text)
                return Lua.Value(tree.source, color, "..", nomsu:tree_to_lua(text), "..", reset);
            end)
        end
    end

