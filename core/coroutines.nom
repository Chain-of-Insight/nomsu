#!/usr/bin/env nomsu -V1
#
    This file defines the code that creates and manipulates coroutines

use "core/metaprogramming.nom"

compile [coroutine %body, generator %body] to
    Lua value ".."
        (function()
            \(%body as lua statements)
        end)
compile [->] to: Lua value "coroutine.yield(true)"
compile [-> %] to: Lua value "coroutine.yield(true, \(% as lua expr))"
compile [for % in coroutine %co %body] to
    Lua ".."
        for junk,\(% as lua expr) in coroutine.wrap(\(%co as lua expr)) do
            \(%body as lua statements)
        end
